package raijin.views;

import raijin.models.AnnualStudent;
import raijin.models.Course;
import raijin.models.CreditStudent;
import raijin.models.Student;
import raijin.utils.DataManager;

import javax.swing.*;
import javax.swing.table.DefaultTableModel;
import java.awt.*;
import java.awt.event.*;
import java.util.*;
import java.util.List;

public class SCourseList extends JDialog {
    private JPanel contentPane;
    private JPanel tablePanel;
    private JButton registerButton;
    private JLabel statusLabel;
    private JTable dataTable;
    public static DefaultTableModel tmd;

    public SCourseList() {

        $$$setupUI$$$();


        setContentPane(contentPane);
        setModal(true);
        createUIComponents();
        tablePanel.setLayout(new BorderLayout());
        tablePanel.add(new JScrollPane(dataTable));


        if ((DataManager.getInst().findStudentByID(DataManager.getCurrentID())) instanceof AnnualStudent) {
            registerButton.setVisible(false);
        }

        registerButton.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent actionEvent) {
                onRegister();
            }
        });

        // call onCancel() when cross is clicked
        setDefaultCloseOperation(DO_NOTHING_ON_CLOSE);
        addWindowListener(new WindowAdapter() {
            public void windowClosing(WindowEvent e) {
                onCancel();
            }
        });

        // call onCancel() on ESCAPE
        contentPane.registerKeyboardAction(new ActionListener() {
            public void actionPerformed(ActionEvent e) {
                onCancel();
            }
        }, KeyStroke.getKeyStroke(KeyEvent.VK_ESCAPE, 0), JComponent.WHEN_ANCESTOR_OF_FOCUSED_COMPONENT);
    }

    private void onOK() {
        // add your code here
        dispose();
    }

    private void onCancel() {
        // add your code here if necessary
        dispose();
    }

    private void onRegister() {
        int cur_row = dataTable.getSelectedRow();
        if (cur_row == -1) {
            return;
        }
        boolean result = false;
        String id = tmd.getValueAt(dataTable.getSelectedRow(), 0).toString();
        Student s = DataManager.getInst().findStudentByID(DataManager.getCurrentID());
        if (s instanceof AnnualStudent) {
            result = ((AnnualStudent) s).registerCourse(id);
        } else if (s instanceof CreditStudent) {
            result = ((CreditStudent) s).registerCourse(id);
        }
        if (result) {
            statusLabel.setText("Register Successfully");
            statusLabel.setVisible(true);
        } else {
            statusLabel.setText("Fail to register");
            statusLabel.setVisible(true);
        }
        SMyCourses.tmd.setRowCount(0);
        List<String> list = DataManager.getInst().findStudentByID(DataManager.getCurrentID()).getCourseList();
        for (String courseid : list) {
            double tmp = (DataManager.getInst().findCourseByID(courseid)).getStudentPoint(DataManager.getCurrentID());
            if (tmp == -1) {
                SMyCourses.tmd.addRow(new Object[]{courseid, DataManager.getInst().findCourseByID(courseid).getName(), "N/A"});
            } else {
                SMyCourses.tmd.addRow(new Object[]{courseid, DataManager.getInst().findCourseByID(courseid).getName(), String.valueOf(tmp)});
            }
        }
        SMyCourses.tmd.fireTableDataChanged();

    }

    private void createUIComponents() {
        // TODO: place custom component creation code here
        Vector<String> colNames = new Vector<>();
        colNames.add("ID");
        colNames.add("Name");
        tmd = new DefaultTableModel(colNames, 0) {
            @Override
            public boolean isCellEditable(int row, int column) {
                //all cells false
                return false;
            }
        };
        // for .... tmd.addRow();
        for (Course course : DataManager.getInst().getCourseList()) {
            tmd.addRow(new Object[]{course.getId(), course.getName()});
        }

        tmd.fireTableDataChanged();
        dataTable = new JTable(tmd);

    }

    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */
    private void $$$setupUI$$$() {
        contentPane = new JPanel();
        contentPane.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(4, 1, new Insets(10, 10, 10, 10), -1, -1));
        tablePanel = new JPanel();
        tablePanel.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(1, 1, new Insets(0, 0, 0, 0), -1, -1));
        contentPane.add(tablePanel, new com.intellij.uiDesigner.core.GridConstraints(2, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_BOTH, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, null, null, null, 0, false));
        final JLabel label1 = new JLabel();
        label1.setText("Course List");
        contentPane.add(label1, new com.intellij.uiDesigner.core.GridConstraints(0, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_NONE, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        registerButton = new JButton();
        registerButton.setText("Register");
        contentPane.add(registerButton, new com.intellij.uiDesigner.core.GridConstraints(3, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_HORIZONTAL, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        statusLabel = new JLabel();
        statusLabel.setText("");
        statusLabel.setVisible(false);
        contentPane.add(statusLabel, new com.intellij.uiDesigner.core.GridConstraints(1, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_WEST, com.intellij.uiDesigner.core.GridConstraints.FILL_NONE, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
    }

    /**
     * @noinspection ALL
     */
    public JComponent $$$getRootComponent$$$() {
        return contentPane;
    }
}
